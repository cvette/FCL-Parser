%lex

DIGIT = [0-9]
IDENTIFIER = ([a-zA-Z] | (\_([a-zA-Z] | [0-9]))) ((\_)? ([a-zA-Z] | [0-9]))*
BINARY_INTEGER = "2#"\s*[0-1]\s*(\_?[0-1])*
OCTAL_INTEGER = "8#"\s*[0-7]\s*(\_?[0-7])*
HEX_INTEGER = "16#"\s*[0-9A-F]\s*(\_?[0-9A-F])*
REAL_NUMBER = (\+|\-)?[0-9](\_?[0-9])*\.[0-9](\_?[0-9])*
EXPONENT = "E"(\+|\-)?[0-9](\_?[0-9])*

%options flex case-insensitive

%%

\s+                 /* IGNORE */
ACCU                return 'ACCU'
ACT                 return 'ACT'
AND                 return 'AND'
ASUM                return 'ASUM'
BDIF                return 'BDIF'
BSUM                return 'BSUM'
BOOL                return 'BOOL'
CoA                 return 'CoA'
CoG                 return 'CoG'
CoGS                return 'CoGS'
CONSTANT            return 'CONSTANT'
DEFAULT             return 'DEFAULT'
DEFUZZIFY           return 'DEFUZZIFY'
END_DEFUZZIFY       return 'END_DEFUZZIFY'
END_FUNCTION_BLOCK  return 'END_FUNCTION_BLOCK'
END_FUZZIFY         return 'END_FUZZIFY'
END_OPTIONS         return 'END_OPTIONS'
END_RULEBLOCK       return 'END_RULEBLOCK'
END_VAR             return 'END_VAR'
END_TYPE            return 'END_TYPE'
FUNCTION_BLOCK      return 'FUNCTION_BLOCK'
FUZZIFY             return 'FUZZIFY'
IF                  return 'IF'
INT                 return 'INT'
IS                  return 'IS'
LM                  return 'LM'
METHOD              return 'METHOD'
MAX                 return 'MAX'
MIN                 return 'MIN'
NC                  return 'NC'
NOT                 return 'NOT'
NON_RETAIN          return 'NON_RETAIN'
NSUM                return 'NSUM'
OPTIONS             return 'OPTIONS'
OR                  return 'OR'
PROD                return 'PROD'
RANGE               return 'RANGE'
REAL                return 'REAL'
RETAIN              return 'RETAIN'
RM                  return 'RM'
RULEBLOCK           return 'RULEBLOCK'
RULE                return 'RULE'
TERM                return 'TERM'
THEN                return 'THEN'
VAR_OUTPUT          return 'VAR_OUTPUT'
VAR_INPUT           return 'VAR_INPUT'
VAR_IN_OUT          return 'VAR_IN_OUT'
VAR                 return 'VAR'
WITH                return 'WITH'
FALSE               return 'FALSE'
TRUE                return 'TRUE'
{EXPONENT}          return 'EXPONENT'
{IDENTIFIER}        return 'ID'
{BINARY_INTEGER}    return 'BINARY_INTEGER'
{OCTAL_INTEGER}     return 'OCTAL_INTEGER'
{HEX_INTEGER}       return 'HEX_INTEGER'
{REAL_NUMBER}       return 'REAL_NUMBER'
{DIGIT}             return 'DIGIT'
"#"                 return 'HASH'
"+"                 return 'PLUS'
"-"                 return 'DASH'
"_"                 return 'LDASH'
")"                 return 'RPARA'
"("                 return 'LPARA'
";"                 return 'SEMICOLON'
","                 return 'COMMA'
":="                return 'ASSIGNMENT'
":"                 return 'COLON'
"."                 return 'DOT'
".."                return 'RANGEDOT'
<<EOF>>             return 'EOF'
.                   return 'INVALID'